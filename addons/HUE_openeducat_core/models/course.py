from odoo import fields, models

class CustomCourse(models.Model):
    _inherit = 'op.course'
    
    origin = fields.Char(string='Source Document', help='Reference of the document that produced this invoice.')
    access_token = fields.Char(string='Security Token')
    refund_invoice_id = fields.Many2one('account.move', string='Invoice for which this invoice is the credit note')
    number = fields.Char()
    move_name = fields.Char(string='Journal Entry Name', help='Technical field holding the number given to the invoice, automatically set when the invoice is validated then stored to set the same number again if the invoice is cancelled, set to draft and re-validated.')
    reference = fields.Char(string='Vendor Reference', help='The partner reference of this invoice.')
    control_email = fields.Char()
    corehours = fields.Integer(string='core hours')
    course_cotrolgrades_ids = fields.One2many('op.course.controlgrades', 'course_id', string='Course Control Grades')
    course_grade_eqiv_ids = fields.One2many('op.course.gradeseqiv', 'course_id', string='Course Grade Eqiv ID')
    course_grade_ids = fields.One2many('op.course.grades', 'course_id', string='Course Grade ID')
    course_level_ids = fields.One2many('op.course.levels', 'course_id', string='Course Level ID')
    course_loadhours_ids = fields.One2many('op.course.loadhours', 'course_id', string='Course Load Hours GPA')
    course_loadhourslevels_ids = fields.One2many('op.course.loadhourslevels', 'course_id', string='Course Load Hours Levels')
    course_resultspublish_ids = fields.One2many('op.course.resultspublish', 'course_id', string='Course Results Publish')
    subjects_ids = fields.One2many('op.subject', 'course_id', string='Course Subjects') #check this out
    credithours = fields.Integer(string='credit hours',required=True)
    cretificate_arabicname = fields.Char(string='certificate Arabic name')
    cretificate_englishname = fields.Char(string='cretificate_englishname')
    deduction_grade_first = fields.Many2one('op.grades', string='deduction Grade 1')
    deduction_grade_second = fields.Many2one('op.grades', string='deduction Grade 2')
    electivehours = fields.Integer(string='elective hours')
    enhancment = fields.Selection([('1', 'biggest'), ('2', 'latest')], string='Enhancment')
    evaluation_type = fields.Selection([('normal','Normal'),('GPA','GPA'),('CWA','CWA'),('CCE','CCE')], string='Evaluation Type')
    faculty_id = fields.Many2one('hue.faculties', string='Faculty', required=True)
    faculty_ids = fields.Many2many('op.faculty', string='Faculty')
    farouk_id = fields.Integer(string='Farouk Mapping')
    freehours = fields.Integer(string='free hours')
    fr_percent = fields.Float(string='Fr Percent')
    gpafailscount = fields.Selection([('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('all', 'all')], string='GPA Fails Count')
    honors_gpa = fields.Float(string='Honors gpa')
    intern_year = fields.Boolean(string='Intern Year',default=False)
    loadhourstype = fields.Selection([('GPA','GPA'),('Level','Level'),('Both','Both')], string='load hours type')
    max_unit_load = fields.Float(string='Maximum Unit Load')
    min_unit_load = fields.Float(string='Minimum Unit Load')
    pass_degree = fields.Float(string='Pass Degree')
    projecthours = fields.Integer(string='project hours')
    sds_tobedeleted = fields.Boolean(string='Sds Tobedeleted')
    second_pass_degree = fields.Float(string='Pass Degree 2')
    section = fields.Char('Section', size=32, required=False)
    subject_ids = fields.Many2many('op.subject', string='Subject(s)')
    traininghours = fields.Integer(string='training hours')
    fees_term_id = fields.Many2one('op.fees.terms', required=False)